#	Examples of running this image:
#docker run \
#--detach \
#-it \
#-h rx \
#-w /mnt/dtnconfig/ion-ltp-rx \
#-v "$(pwd)/configs":/mnt/dtnconfig \
#--cap-add=NET_ADMIN \
#--net ionnet \
#--ip 172.0.0.2 --name ion-rx \
#gamecat69/ion:latest

FROM debian:bullseye-slim AS builder
LABEL Description="This image is used to run ION-LTP atop Debian Bullseye"

ENV ION_SRC="ion-open-source" \
    ION_VERSION="4.1.2" \
    ION_SRC_DIR="/usr/local/src/ion"

#	Install pre-requisites and tools
RUN DEBIAN_FRONTEND=noninteractive \
    apt update && \
    apt install --no-install-recommends -y git gcc make wget automake autoconf patch libc6-dev libdb-dev libssl-dev g++ \
    libexpat1-dev

RUN  mkdir -p /build
WORKDIR /build
COPY ./build/${ION_SRC}-${ION_VERSION}.tar.gz .
# RUN wget https://sourceforge.net/projects/ion-dtn/files/${ION_SRC}-${ION_VERSION}.tar.gz --no-check-certificate
# RUN wget http://downloads.sourceforge.net/project/ion-dtn/ion-3.7.0.tar.gz --no-check-certificate 
RUN tar -zxvf ${ION_SRC}-${ION_VERSION}.tar.gz
RUN cd ${ION_SRC}-${ION_VERSION} && \
    ls -la && \
    ./configure --prefix=/usr/local/src

RUN cd ${ION_SRC}-${ION_VERSION} && \
    make -j$((`getconf _NPROCESSORS_ONLN` + 1)) CFLAGS="-Wno-error=format-truncation"
RUN cd ${ION_SRC}-${ION_VERSION} && \
    make install
RUN ldconfig

FROM debian:bullseye-slim

RUN DEBIAN_FRONTEND=noninteractive \
    apt update && \
    apt upgrade && \
    apt install --no-install-recommends -y ca-certificates gosu && \
    apt autoremove -y


COPY --from=builder /usr/local/src /usr/local/src
COPY configs/sample.rc /usr/local/etc/ion/ion.rc

WORKDIR /service

RUN groupadd -r ionserv && \
    useradd -r -g ionserv ionserv && \
    chown -R ionserv:ionserv /service

ENV PATH=/usr/local/src/bin:${PATH}

EXPOSE 1113/udp

COPY build/docker-entrypoint.sh /usr/bin

# ENTRYPOINT [ "docker-entrypoint.sh" ]

# # #	Create the base working directory
# RUN mkdir -p /mnt/dtnconfig

# EXPOSE 1113
# CMD ./dtn-start.sh


# https://github.com/rtmor/ion-dtn-docker/blob/main/Makefile